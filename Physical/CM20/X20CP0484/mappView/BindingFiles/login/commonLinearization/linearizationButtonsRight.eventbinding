<?xml version="1.0" encoding="utf-8"?>
<EventBindingSet id="linearizationButtonsRight_eventbinding" xmlns="http://www.br-automation.com/iat2014/eventbinding/v2" xmlns:types="http://www.br-automation.com/iat2015/widgetTypes/v2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Bindings>
    <EventBinding id="linearizationButtonsRight.start.MouseDown">
      <Source xsi:type="widgets.brease.Button.Event" contentRefId="linearizationButtonsRight" widgetRefId="start" event="MouseDown" />
      <Operand datatype="BOOL" name="calibrationToolPlugged">
        <ReadTarget xsi:type="opcUa.NodeAction.Read" refId="::EM_vibrat:localVariables[0].hw.ModuleOkCalibrationTool">
          <Method xsi:type="opcUa.NodeAction.GetValue" />
        </ReadTarget>
      </Operand>
      <Operand datatype="BOOL" name="calibrationToolPluggedBusCtrl">
        <ReadTarget xsi:type="opcUa.NodeAction.Read" refId="::EM_vibrat:localVariables[0].hw.ModuleOkCalibrationToolBusCtrl">
          <Method xsi:type="opcUa.NodeAction.GetValue" />
        </ReadTarget>
      </Operand>
      <Operand datatype="ANY_INT" name="page">
        <ReadTarget xsi:type="session.VariableAction.Read" refId="commonMain.pageName">
          <Method xsi:type="session.VariableAction.GetValue" />
        </ReadTarget>
      </Operand>
      <EventHandler condition="calibrationToolPlugged = false AND calibrationToolPluggedBusCtrl = false">
        <Sequence>
          <Step order="0">
            <Action>
              <Target xsi:type="session.VariableAction" refId="dialog.closeState">
                <Method xsi:type="session.VariableAction.SetValueNumber" value="10" />
              </Target>
            </Action>
          </Step>
          <Step order="1">
            <Action>
              <Target xsi:type="session.VariableAction" refId="dialog.closeButtonStyle">
                <Method xsi:type="session.VariableAction.SetValueString" value="imageRed" />
              </Target>
            </Action>
          </Step>
          <Step order="2">
            <Action>
              <Target xsi:type="clientSystem.Action">
                <Method xsi:type="clientSystem.Action.OpenDialog" dialogId="dialogClose" mode="modal" />
              </Target>
            </Action>
          </Step>
        </Sequence>
      </EventHandler>
      <EventHandler condition="(calibrationToolPlugged = true OR calibrationToolPluggedBusCtrl = true) AND page = 44">
        <Sequence>
          <Step order="0">
            <Action>
              <Target xsi:type="session.VariableAction" refId="dialog.confirmCancelState">
                <Method xsi:type="session.VariableAction.SetValueNumber" value="30" />
              </Target>
            </Action>
          </Step>
          <Step order="1">
            <Action>
              <Target xsi:type="clientSystem.Action">
                <Method xsi:type="clientSystem.Action.OpenDialog" dialogId="dialogConfirmCancel" mode="modal" />
              </Target>
            </Action>
          </Step>
        </Sequence>
      </EventHandler>
      <EventHandler condition="(calibrationToolPlugged = true OR calibrationToolPluggedBusCtrl = true) AND page = 45">
        <Sequence>
          <Step order="0">
            <Action>
              <Target xsi:type="session.VariableAction" refId="dialog.confirmCancelState">
                <Method xsi:type="session.VariableAction.SetValueNumber" value="40" />
              </Target>
            </Action>
          </Step>
          <Step order="1">
            <Action>
              <Target xsi:type="clientSystem.Action">
                <Method xsi:type="clientSystem.Action.OpenDialog" dialogId="dialogConfirmCancel" mode="modal" />
              </Target>
            </Action>
          </Step>
        </Sequence>
      </EventHandler>
    </EventBinding>
    <EventBinding id="opendialog.CircularVibrator.LinearizationDialog">
      <Source xsi:type="opcUa.Event" refId="::vibrator:localVariables[0].hmi.linearizationProcessing" event="ValueChanged" />
      <EventHandler condition="newValue = true">
        <Sequence>
          <Step order="0">
            <Action>
              <Target xsi:type="clientSystem.Action">
                <Method xsi:type="clientSystem.Action.OpenDialog" dialogId="linearProgressDialog" mode="modal" />
              </Target>
            </Action>
          </Step>
          <Step order="1">
            <Action>
              <Target xsi:type="session.VariableAction" refId="progressDialogIdx">
                <Method xsi:type="session.VariableAction.SetValueNumber" value="0" />
              </Target>
            </Action>
          </Step>
        </Sequence>
      </EventHandler>
      <EventHandler condition="newValue = false AND oldValue = true">
        <Action>
          <Target xsi:type="clientSystem.Action">
            <Method xsi:type="clientSystem.Action.CloseDialog" dialogId="linearProgressDialog" />
          </Target>
        </Action>
      </EventHandler>
    </EventBinding>
    <EventBinding id="opendialog.LinearVibrator.LinearizationDialog">
      <Source xsi:type="opcUa.Event" refId="::vibrator:localVariables[1].hmi.linearizationProcessing" event="ValueChanged" />
      <EventHandler condition="newValue = true">
        <Sequence>
          <Step order="0">
            <Action>
              <Target xsi:type="clientSystem.Action">
                <Method xsi:type="clientSystem.Action.OpenDialog" dialogId="linearProgressDialog" mode="modal" />
              </Target>
            </Action>
          </Step>
          <Step order="1">
            <Action>
              <Target xsi:type="session.VariableAction" refId="progressDialogIdx">
                <Method xsi:type="session.VariableAction.SetValueNumber" value="1" />
              </Target>
            </Action>
          </Step>
        </Sequence>
      </EventHandler>
      <EventHandler condition="newValue = false AND oldValue = true">
        <Action>
          <Target xsi:type="clientSystem.Action">
            <Method xsi:type="clientSystem.Action.CloseDialog" dialogId="linearProgressDialog" />
          </Target>
        </Action>
      </EventHandler>
    </EventBinding>
  </Bindings>
</EventBindingSet>